// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @unique @default(autoincrement())
  userName   String   @unique @db.Char(20)
  password   String   @db.Char(100)
  nickName   String   @default("")
  email      String   @db.Char(50)
  headPic    String   @default("")
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt

  friends        Friendship[] @relation("userToFriend")
  inverseFriends Friendship[] @relation("friendToUser")
}

model Friendship {
  userId Int
  user   User @relation("userToFriend", fields: [userId], references: [id])

  friendId Int
  friend   User @relation("friendToUser", fields: [friendId], references: [id])

  @@id([userId, friendId])
}

model FriendRequest {
  id         Int      @id @default(autoincrement())
  // 发送请求方
  fromUserId Int
  // 对方 id
  toUserId   Int
  reason     String   @db.Char(100)
  status     Int
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
}

model ChatRoom {
  id         Int      @unique @default(autoincrement())
  name       String   @db.Char(20)
  // false -> 单人
  // true -> 多人
  type       Boolean  @default(false)
  createTime DateTime @default(now())
  updateTime DateTime @updatedAt
}

model UserChatRoom {
  userId     Int
  chatRoomId Int

  @@id([userId, chatRoomId])
}

model ChatHistory {
  id         Int      @id @default(autoincrement())
  content    String   @db.VarChar(500)
  // 0: 文本 1: 图片 2: 文件
  type       Int
  chatRoomId Int
  senderId   Int
  createTime DateTime @default(now())
  updateTiem DateTime @updatedAt
}
